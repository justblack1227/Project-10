{"version":3,"sources":["config.js","Data.js","Context.js","components/Header.js","components/ErrorsDisplay.js","components/CreateCourse.js","components/UpdateCourse.js","components/CourseDetail.js","components/UserSignIn.js","components/UserSignUp.js","components/UserSignOut.js","components/Courses.js","components/NotFound.js","PrivateRoute.js","components/Forbidden.js","components/UnhandledError.js","App.js","components/Authenticated.js","serviceWorker.js","index.js"],"names":["Data","path","method","body","requiresAuth","credentials","url","config","options","headers","JSON","stringify","encodedCredentials","btoa","emailAddress","password","fetch","this","api","response","status","json","then","data","Error","user","errors","course","console","log","Context","React","createContext","Provider","state","authenticatedUser","Cookies","getJSON","signIn","a","getUser","setState","set","expires","signOut","remove","value","actions","props","children","Component","Consumer","withContext","context","Header","authUser","Fragment","className","id","to","firstName","lastName","ErrorsDisplay","errorsDisplay","length","map","error","i","key","CreateCourses","title","description","estimatedTime","materialsNeeded","handleClick","e","preventDefault","history","push","handleSubmit","submit","change","event","name","target","userId","createCourse","catch","err","onSubmit","type","onChange","placeholder","defaultValue","onClick","UpdateCourse","course_id","updateCourse","window","location","replace","params","match","loaded","bind","responseData","User","CourseDetail","deleteCourse","confirm","buttons","source","UserSignIn","from","pathname","UserSignUp","confirmPassword","createUser","Courses","courses","courseList","list","version","xmlns","x","y","viewBox","points","NotFound","component","rest","render","Forbidden","UnhandledError","UserSignUpWithContext","UserSignInWithContext","CreateCourseWithContext","CreateCourse","UserSignOutWithContext","UserSignOut","HeaderWithContext","AuthWithContext","reroute","setTimeout","onLoad","UpdateCourseWithContext","CourseDetailInWithContext","App","exact","PrivateRoute","PureComponent","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.05bc8498.chunk.js","sourcesContent":["\r\nexport default {\r\n  apiBaseUrl: 'http://localhost:5000/api',\r\n};\r\n","import config from './config';\r\n\r\n//Configs api requests and fetches data\r\nexport default class Data {\r\n  api(path, method = 'GET', body = null, requiresAuth = false, credentials = null) {\r\n    const url = config.apiBaseUrl + path;\r\n  \r\n    const options = {\r\n      method,\r\n      headers: {\r\n        'Content-Type': 'application/json; charset=utf-8',\r\n      },\r\n    };\r\n\r\n    if (body !== null) {\r\n      options.body = JSON.stringify(body);\r\n    }\r\n\r\n    if (requiresAuth) {\r\n      const encodedCredentials = btoa(`${credentials.emailAddress}:${credentials.password}`);\r\n      options.headers['Authorization'] = `Basic ${encodedCredentials}`;\r\n    }\r\n\r\n    return fetch(url, options);\r\n  }\r\n\r\n  /**\r\n  * makes API request to obtain authenicated user data.\r\n  * @param {string} emailAddress - Provided input from user\r\n  * @param {string} password - Provided input from user\r\n  * @returns {string} User Data\r\n  */\r\n  async getUser(emailAddress, password) {\r\n    const response = await this.api(`/users`, 'GET', null, true, {emailAddress, password});\r\n    if (response.status === 200) {\r\n      return response.json().then(data => data);\r\n    }\r\n    else if (response.status === 401) {\r\n      return null;\r\n    }\r\n    else {\r\n      throw new Error();\r\n    }\r\n  }\r\n  \r\n  /**\r\n  * Sends POST API request to create user\r\n  * @param {object} user - User Data to be submitted\r\n  */\r\n  async createUser(user) {\r\n    const response = await this.api('/users', 'POST', user);\r\n    if (response.status === 201) {\r\n      return [];\r\n    }\r\n    else if (response.status === 400) {\r\n      return response.json().then(data => {\r\n        return data.errors;\r\n      });\r\n    }\r\n    else {\r\n      throw new Error();\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Sends POST API request to create course\r\n  * @param {object} course - Course Data to be submitted\r\n  * @param {string } emailAddress - Provided input from user\r\n  * @param {string} course - Provided input from user\r\n  */\r\n  async createCourse (emailAddress, password, course) {\r\n    console.log(emailAddress, password, \"hey\")\r\n    const response = await this.api('/courses', 'POST', course, true, {emailAddress, password});\r\n    if (response.status === 201) {\r\n      return [];\r\n    }\r\n    else if (response.status === 400) {\r\n      return response.json().then(data => {\r\n        return data.errors;\r\n      });\r\n    }\r\n    else {\r\n      throw new Error();\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Sends PUT API request to uodate course\r\n  * @param {object} course - Course Data to be submitted\r\n  * @param {string} emailAddress - Provided input from user\r\n  * @param {string} password - Provided input from user\r\n  * @param {string} path - path of course that needs updated\r\n  */\r\n  async updateCourse (emailAddress, password, course, path) {\r\n    const response = await this.api(path, 'PUT', course, true, {emailAddress, password});\r\n    if (response.status === 204) {\r\n      return [];\r\n    }\r\n    else if (response.status === 400) {\r\n      return response.json().then(data => {\r\n        return data.errors;\r\n      });\r\n    }\r\n    else {\r\n      throw new Error();\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Sends DELETE API request to delete course\r\n  * @param {object} password - Provided input from user\r\n  * @param {string} emailAddress - Provided input from user\r\n  * @param {string} path - path of course that needs deleted\r\n  */\r\n  async deleteCourse (emailAddress, password, path) {\r\n    const response = await this.api(path, 'DELETE', null, true, {emailAddress, password});\r\n    if (response.status === 204) {\r\n      return [];\r\n    }\r\n    else if (response.status === 400) {\r\n      return response.json().then(data => {\r\n        return data.errors;\r\n      });\r\n    }\r\n    else {\r\n      throw new Error();\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Data from './Data.js';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst Context = React.createContext(); \r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    authenticatedUser: Cookies.getJSON('authenticatedUser') || null\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = new Data();\r\n  }\r\n\r\n  render() {\r\n    const {authenticatedUser, password } = this.state;\r\n    const value = {\r\n      authenticatedUser, \r\n      password,\r\n      data: this.data,\r\n      actions: {\r\n        signIn: this.signIn,\r\n        signOut: this.signOut\r\n      }\r\n    };\r\n    \r\n    return (\r\n      <Context.Provider value={value}>\r\n        {this.props.children}\r\n      </Context.Provider>  \r\n    );\r\n  }\r\n\r\n  /**\r\n  * Checks and returns authenicated User, storing state in a cookie.\r\n  * @param {string } emailAddress - Provided input from user\r\n  * @param {string } password - Provided input from user\r\n  * @returns {String} Authenticated User\r\n  */\r\n  signIn = async (emailAddress, password) => {\r\n    const user = await this.data.getUser(emailAddress, password);\r\n    if (user !== null) {\r\n      user.password = password\r\n      this.setState(() => {\r\n        return {\r\n          authenticatedUser:user,\r\n        };\r\n      })\r\n      Cookies.set('authenticatedUser', JSON.stringify(user), {expires: 1});\r\n    }\r\n    return user;\r\n  }\r\n\r\n  /**\r\n  * Removes authenticatedUser's state\r\n  */\r\n  signOut = () => {\r\n    this.setState({authenticatedUser:null});\r\n    Cookies.remove('authenticatedUser')\r\n  }\r\n}\r\n\r\n\r\nexport const Consumer = Context.Consumer;\r\n\r\n/**\r\n * A higher-order component that wraps the provided component in a Context Consumer component.\r\n * @param {class} Component - A React component.\r\n * @returns {function} A higher-order component.\r\n */\r\n\r\nexport default function withContext(Component) {\r\n  return function ContextComponent(props) {\r\n    return (\r\n      <Context.Consumer>\r\n        {context => <Component {...props} context={context} />}\r\n      </Context.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header(props) {\r\n    const { context } = props;\r\n    const authUser = context.authenticatedUser;\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"header\">\r\n                <div className=\"bounds\">\r\n                    <h1 className=\"header--logo\"><Link id=\"header-link\" to=\"/\">Courses</Link></h1>\r\n                    <nav>\r\n                        {authUser ?\r\n                            <React.Fragment>\r\n                                <span> Welcome, {authUser.firstName} {authUser.lastName}!</span>\r\n                                <Link className=\"signout\" to=\"/signout\">Sign Out</Link>\r\n                            </React.Fragment>\r\n                        :\r\n                            <React.Fragment>\r\n                                <Link className=\"signup\" to=\"/signup\">Sign Up</Link>\r\n                                <Link className=\"signin\" to=\"/signin\">Sign In</Link>\r\n                            </React.Fragment>\r\n                        }\r\n                        \r\n                    </nav>\r\n                \r\n                </div>\r\n            </div>\r\n            <hr />\r\n        </React.Fragment>\r\n    );\r\n}   \r\n\r\nexport default Header;\r\n\r\n\r\n","import React from 'react';\r\n\r\n/**\r\n * Renders the HTML for errors\r\n * @param {props} Errors - validation errors \r\n */\r\nfunction ErrorsDisplay(props) {\r\n    let errorsDisplay = null;\r\n    const errors = props.errors;\r\n\r\n    if (errors.length) {\r\n        errorsDisplay = (\r\n        <div>\r\n            <h2 className=\"validation--errors--label\">Oh Oh! There was an Error</h2>\r\n            <div className=\"validation-errors\">\r\n            <ul>\r\n                {errors.map((error, i) => <li key={i}>{error}</li>)}\r\n            </ul>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n    return errorsDisplay;\r\n}\r\n\r\nexport default ErrorsDisplay;","import React, { Component } from 'react';\r\nimport ErrorsDisplay from './ErrorsDisplay.js';\r\n\r\nexport default class CreateCourses extends Component {\r\n  state = {\r\n    title: '', \r\n    description: '', \r\n    estimatedTime: '', \r\n    materialsNeeded: '',\r\n    errors: [],\r\n    context: this.props.context\r\n  }\r\n\r\n  /**\r\n  * Handles the click functionality for when user hits cancel.\r\n  * @param {event} Click - when user clicks button to cancel. \r\n  */\r\n  handleClick = e => {\r\n      e.preventDefault();\r\n      this.props.history.push('/');\r\n  }\r\n\r\n  /**\r\n  * Handles the submit functionality for when user submits new course info.\r\n  * @param {event} Submit - when user submits new data request. \r\n  */\r\n  handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      this.submit();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      title, \r\n      estimatedTime, \r\n      errors,\r\n      context\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"bounds course--detail\">\r\n        <h1>Create Course</h1>\r\n        <div>\r\n          <ErrorsDisplay errors={errors} />\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div className=\"grid-66\">\r\n              <div className=\"course--header\">\r\n                <h4 className=\"course--label\">Course</h4>\r\n                <div><input id=\"title\" name=\"title\" type=\"text\" className=\"input-title course--title--input\" onChange={this.change} placeholder=\"Course title...\" defaultValue={title} /></div>\r\n                <p>By {`${context.authenticatedUser.firstName} ${context.authenticatedUser.lastName}`}</p>\r\n              </div>\r\n              <div className=\"course--description\">\r\n                <div><textarea id=\"description\" name=\"description\" className=\"\" onChange={this.change} placeholder=\"Course description...\"></textarea></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"grid-25 grid-right\">\r\n              <div className=\"course--stats\">\r\n                <ul className=\"course--stats--list\">\r\n                  <li className=\"course--stats--list--item\">\r\n                    <h4>Estimated Time</h4>\r\n                    <div><input id=\"estimatedTime\" name=\"estimatedTime\" type=\"text\" className=\"course--time--input\" onChange={this.change} placeholder=\"Hours\" defaultValue={estimatedTime} /></div>\r\n                  </li>\r\n                  <li className=\"course--stats--list--item\">\r\n                    <h4>Materials Needed</h4>\r\n                    <div><textarea id=\"materialsNeeded\" name=\"materialsNeeded\" className=\"\" onChange={this.change} placeholder=\"List materials...\"></textarea></div>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div className=\"grid-100 pad-bottom\"><button className=\"button\" type=\"submit\">Create Course</button><button className=\"button button-secondary\" onClick={this.handleClick}>Cancel</button></div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n  * Sets and changes state when user updates input fields.\r\n  * @param {event} change - input fields. \r\n  */\r\n  change = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    this.setState(() => {\r\n        return {\r\n        [name]: value\r\n        };\r\n    });\r\n}\r\n\r\n/**\r\n* Sends new course data and checks for errors\r\n*/\r\nsubmit = () => {\r\n    const { title, description, estimatedTime, materialsNeeded, context} = this.state;\r\n    const { emailAddress, password } = context.authenticatedUser;\r\n    const course = {\r\n      title,\r\n      description,\r\n      estimatedTime,\r\n      materialsNeeded,\r\n      userId: context.authenticatedUser.id\r\n  }\r\n\r\n    context.data.createCourse(emailAddress, password, course)\r\n     .then( errors => {\r\n      if (errors.length) {\r\n          this.setState({errors});\r\n         } else {\r\n             this.props.history.push('/');\r\n         }\r\n     })\r\n     .catch( err => {\r\n         this.props.history.push('/error');\r\n     })\r\n}\r\n\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport ErrorsDisplay from './ErrorsDisplay.js';\r\n\r\nexport default class UpdateCourse extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n      this.state = {\r\n          title: '',\r\n          description: '',\r\n          estimatedTime: '',\r\n          materialsNeeded: '',\r\n          course_id: '',\r\n          params: this.props.match.params,\r\n          user: [],\r\n          errors: [],\r\n          loaded: false\r\n        };\r\n        this.change = this.change.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n    \r\n      componentDidMount(){\r\n          /**\r\n          * Fetches course data that needs to be updated\r\n          */\r\n          fetch(`http://localhost:5000/api/courses/${this.state.params.id}`)\r\n              .then( response => response.json())\r\n              .then( responseData => {\r\n                  this.setState({ \r\n                  title: responseData.title, \r\n                  description: responseData.description,\r\n                  estimatedTime: responseData.estimatedTime,\r\n                  materialsNeeded: responseData.materialsNeeded,\r\n                  course_id: responseData.id,\r\n                  loaded: true\r\n              });\r\n              return responseData\r\n              })\r\n              .then( data => {\r\n                  this.setState({\r\n                      user: data.User\r\n                  })\r\n              })\r\n      }\r\n  \r\n    /**\r\n    * Handles the submit functionality for when user submits updated info.\r\n    * @param {event} Submit - when user submits updated info. \r\n    */\r\n    handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      this.submit();\r\n    }\r\n  \r\n    /**\r\n    * Handles the click functionality for when user hits cancel.\r\n    * @param {event} Click - when user clicks button to cancel. \r\n    */\r\n    handleClick = e => {\r\n      e.preventDefault();\r\n      this.props.history.push(`/courses/${this.state.course_id}`);\r\n    }\r\n\r\n    render() {\r\n      //Checks if page exists\r\n      if (this.state.loaded) {\r\n        if (!this.state.course_id) {\r\n          window.location.replace('/notfound');\r\n        }\r\n    }\r\n        const {\r\n          title, \r\n          description, \r\n          estimatedTime, \r\n          materialsNeeded,\r\n          errors\r\n        } = this.state;\r\n\r\n        return (\r\n        <div className=\"bounds course--detail\">\r\n        <h1>Update Course</h1>\r\n        <div>\r\n          <ErrorsDisplay errors={errors} />\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div className=\"grid-66\">\r\n              <div className=\"course--header\">\r\n                <h4 className=\"course--label\">Course</h4>\r\n                <div><input id=\"title\" name=\"title\" type=\"text\" className=\"input-title course--title--input\" onChange={this.change} placeholder=\"Course title...\" value={title} /></div>\r\n                <p>By {`${this.state.user.firstName} ${this.state.user.lastName}`}</p>\r\n              </div>\r\n              <div className=\"course--description\">\r\n                <div><textarea id=\"description\" name=\"description\" className=\"\" onChange={this.change} placeholder=\"Course Description...\" value={description}>\r\n                </textarea></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"grid-25 grid-right\">\r\n              <div className=\"course--stats\">\r\n                <ul className=\"course--stats--list\">\r\n                  <li className=\"course--stats--list--item\">\r\n                    <h4>Estimated Time</h4>\r\n                    <div><input id=\"estimatedTime\" name=\"estimatedTime\" type=\"text\" className=\"course--time--input\" onChange={this.change} placeholder=\"Hours\" defaultValue={estimatedTime} /></div>\r\n                  </li>\r\n                  <li className=\"course--stats--list--item\">\r\n                    <h4>Materials Needed</h4>\r\n                    <div><textarea id=\"materialsNeeded\" name=\"materialsNeeded\" className=\"\" onChange={this.change} placeholder={materialsNeeded} defaultValue={materialsNeeded}>\r\n                    </textarea></div>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div className=\"grid-100 pad-bottom\"><button className=\"button\" type=\"submit\">Update Course</button><button className=\"button button-secondary\" onClick={this.handleClick}>Cancel</button></div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n  * Sets and changes state when user updates input fields.\r\n  * @param {event} change - input fields. \r\n  */\r\n  change = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    this.setState(() => {\r\n        return {\r\n        [name]: value\r\n        };\r\n    });\r\n  }\r\n\r\n  /**\r\n  * Sends updated request and checks for errors\r\n  */\r\n  submit = () => {\r\n    const { context } = this.props;\r\n    const { title, description, estimatedTime, materialsNeeded, course_id} = this.state\r\n    const { emailAddress, password } = context.authenticatedUser;\r\n    const course = {\r\n      title,\r\n      description,\r\n      estimatedTime,\r\n      materialsNeeded,\r\n      userId: context.authenticatedUser.id\r\n    }\r\n    const path = `/courses/${this.state.course_id}`;\r\n\r\n\r\n    if (context.authenticatedUser.id === this.state.user.id) {\r\n      context.data.updateCourse(emailAddress, password, course, path )\r\n      .then( errors => {\r\n        if (errors.length) {\r\n            this.setState({errors});\r\n          } else {\r\n              this.props.history.push(`/courses/${course_id}`);\r\n          }\r\n      })\r\n      .catch( err => {\r\n          this.props.history.push('/error');\r\n      })\r\n    } else {\r\n      window.location.replace('/forbidden');\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport ErrorsDisplay from './ErrorsDisplay.js';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class CourseDetail extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        course : [],\r\n        params: props.match.params,\r\n        user: [],\r\n        errors:[], \r\n        loaded: false\r\n      };\r\n  \r\n    }\r\n  \r\n    componentDidMount(){\r\n\r\n        /**\r\n        * Fetches a specific course's data\r\n        */\r\n        fetch(`http://localhost:5000/api/courses/${this.state.params.id}`)\r\n            .then( response => response.json())\r\n            .then( responseData => {\r\n                this.setState({ \r\n                course: responseData,\r\n                loaded: true\r\n            });\r\n            return responseData\r\n            })\r\n            .then( data => {\r\n                this.setState({\r\n                    user: data.User\r\n                })\r\n            })\r\n    }\r\n\r\n    /**\r\n    * Checks whether user is authorized to update and/or delete course content\r\n    */\r\n    submit = () => {\r\n        const { context } = this.props;\r\n        const { emailAddress, password } = context.authenticatedUser;\r\n        const path = `/courses/${this.state.params.id}`;\r\n\r\n        if (context.authenticatedUser.id === this.state.user.id) {\r\n          context.data.deleteCourse(emailAddress, password, path )\r\n          .then( errors => {\r\n            if (errors.length) {\r\n                this.setState({errors});\r\n              } else {\r\n                  this.props.history.push('/');\r\n              }\r\n          })\r\n          .catch( err => {\r\n              this.props.history.push('/error');\r\n          })\r\n        } else {\r\n            this.setState( {\r\n              errors: ['You are not authorized to delete this course.']\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Handles the submit functionality for deleting a course.\r\n    * @param {event} Submit - when user submits request to delete. \r\n    */\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const confirmDelete = window.confirm(\"Are you sure you want to delete course?\");\r\n        if (confirmDelete) {\r\n            this.submit();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        /**\r\n        * Checks if page exists\r\n        */\r\n        if (this.state.loaded) {\r\n            if (!this.state.course.id) {\r\n                window.location.replace('/notfound')\r\n            }\r\n        }\r\n\r\n        /**\r\n        * Checks for authentication and renders the delete and update buttons\r\n        */\r\n        const { errors } = this.state;\r\n        let buttons;\r\n        if (this.props.context.authenticatedUser) {\r\n            if (this.props.context.authenticatedUser.id === this.state.user.id) {\r\n                buttons = (           \r\n                <div className=\"grid-100\"><span><Link className=\"button\" to={`/courses/${this.state.params.id}/update`}>Update Course</Link><button onClick={this.handleSubmit} className=\"button\" >Delete Course</button></span><Link\r\n                className=\"button button-secondary\" to=\"/\">Return to List</Link></div>);\r\n            } else {\r\n                buttons = (\r\n                    <div className=\"grid-100\"><Link\r\n                    className=\"button button-secondary\" to=\"/\">Return to List</Link></div>\r\n                )\r\n            }\r\n        } else {\r\n            buttons = (\r\n                <div className=\"grid-100\"><Link\r\n                className=\"button button-secondary\" to=\"/\">Return to List</Link></div>\r\n            )\r\n        }\r\n\r\n      return (\r\n    <div>\r\n        <div className=\"actions--bar\">\r\n          <div className=\"bounds\">\r\n            {buttons}\r\n          </div>\r\n        </div>\r\n        <ErrorsDisplay errors={errors} />\r\n        <div className=\"bounds course--detail\">\r\n            <div className=\"grid-66\">\r\n            <div className=\"course--header\">\r\n                <h4 className=\"course--label\">Course</h4>\r\n                <h3 className=\"course--title\">{this.state.course.title}</h3>\r\n                <p>By {`${this.state.user.firstName} ${this.state.user.lastName}`}</p>\r\n            </div>\r\n            <div className=\"course--description\">\r\n                <ReactMarkdown source={this.state.course.description} /> \r\n            </div>\r\n            </div>\r\n            <div className=\"grid-25 grid-right\">\r\n            <div className=\"course--stats\">\r\n                <ul className=\"course--stats--list\">\r\n                <li className=\"course--stats--list--item\">\r\n                    <h4>Estimated Time</h4>\r\n                    <h3>{this.state.course.estimatedTime}</h3>\r\n                </li>\r\n                <li className=\"course--stats--list--item\">\r\n                    <h4>Materials Needed</h4>\r\n                    <ul>\r\n                        <ReactMarkdown source={this.state.course.materialsNeeded} /> \r\n                    </ul>\r\n                </li>\r\n                </ul>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport ErrorsDisplay from './ErrorsDisplay.js';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class UserSignIn extends Component {\r\n    state = {\r\n        emailAddress: '',\r\n        password: '',\r\n        errors: [],\r\n      }\r\n    /**\r\n     * Handles the click functionality for when user hits cancel.\r\n     * @param {event} Click - when user clicks button to cancel. \r\n     */\r\n    handleClick = e => {\r\n        e.preventDefault();\r\n        this.props.history.push('/');\r\n    }\r\n  \r\n    /**\r\n     * Handles the submit functionality for when user signs in.\r\n     * @param {event} Submit - Sign in form is submitted. \r\n     */\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.submit();\r\n    }\r\n    \r\n    render() {\r\n        const {\r\n          emailAddress,\r\n          password,\r\n          errors,\r\n        } = this.state;\r\n\r\n        return (\r\n        <div className=\"bounds\">\r\n            <div className=\"grid-33 centered signin\">\r\n            <h1>Sign In</h1>\r\n            <div>\r\n                <ErrorsDisplay errors={errors} />\r\n                <form onSubmit={this.handleSubmit}>\r\n                <div><input id=\"emailAddress\" name=\"emailAddress\" type=\"text\" className=\"\" onChange={this.change} placeholder=\"Email Address\" defaultValue={emailAddress} /></div>\r\n                <div><input id=\"password\" name=\"password\" type=\"password\" className=\"\" onChange={this.change} placeholder=\"Password\" defaultValue={password} /></div>\r\n                <div className=\"grid-100 pad-bottom\"><button className=\"button\" type=\"submit\">Sign In</button><button className=\"button button-secondary\" onClick={this.handleClick}>Cancel</button></div>\r\n                </form>\r\n            </div>\r\n            <p>&nbsp;</p>\r\n            <p>Don't have a user account? <Link to=\"/signup\">Click here</Link> to sign up!</p>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Sets and changes state when user updates input fields.\r\n     * @param {event} change - input fields. \r\n     */\r\n    change = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState(() => {\r\n            return {\r\n            [name]: value\r\n            };\r\n        });\r\n    }\r\n    \r\n    /**\r\n    * Sends sign in request and checks for errors\r\n    */\r\n    submit = () => {\r\n        const { context } = this.props;\r\n        const { from } = this.props.location.state || { from: { pathname: '/'}};\r\n        const { emailAddress, password } = this.state;\r\n\r\n        context.actions.signIn(emailAddress, password)\r\n         .then( user => {\r\n             if (user === null) {\r\n                 this.setState(() => {\r\n                    return { errors: [ 'Sign-in was unsuccessful']}\r\n                 });\r\n             } else {\r\n                 this.props.history.push(from);\r\n             }\r\n         })\r\n         .catch( err => {\r\n             this.props.history.push('/error');\r\n         })\r\n    }\r\n    \r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport Data from '../Data';\r\nimport ErrorsDisplay from './ErrorsDisplay.js';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class UserSignUp extends Component {\r\n    constructor() {\r\n        super();\r\n        this.data = new Data();\r\n      }\r\n\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        emailAddress: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        errors: [],\r\n      }\r\n\r\n    /**\r\n     * Handles the click functionality for when user hits cancel.\r\n     * @param {event} Click - when user clicks button to cancel. \r\n     */\r\n     handleClick = e => {\r\n        e.preventDefault();\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    /**\r\n    * Handles the submit functionality for when user sends sign up requst.\r\n    * @param {event} Submit -  sign up form\r\n    */\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.submit();\r\n      }\r\n\r\n    render () {\r\n        const {\r\n            firstName, \r\n            lastName,\r\n            emailAddress,\r\n            password,\r\n            confirmPassword,\r\n            errors,\r\n          } = this.state;\r\n\r\n        return (\r\n        <div className=\"bounds\">\r\n            <div className=\"grid-33 centered signin\">\r\n            <h1>Sign Up</h1>\r\n            <div>\r\n                <ErrorsDisplay errors={errors} />\r\n                <form onSubmit={this.handleSubmit}>\r\n                <div><input id=\"firstName\" name=\"firstName\" type=\"text\" className=\"\" onChange={this.change} placeholder=\"First Name\" defaultValue={firstName} /></div>\r\n                <div><input id=\"lastName\" name=\"lastName\" type=\"text\" className=\"\" onChange={this.change} placeholder=\"Last Name\" defaultValue={lastName} /></div>\r\n                <div><input id=\"emailAddress\" name=\"emailAddress\" type=\"text\" className=\"\" onChange={this.change} placeholder=\"Email Address\" defaultValue={emailAddress} /></div>\r\n                <div><input id=\"password\" name=\"password\" type=\"password\" className=\"\" onChange={this.change} placeholder=\"Password\" defaultValue={password} /></div>\r\n                <div><input id=\"confirmPassword\" name=\"confirmPassword\" type=\"password\" className=\"\" onChange={this.change} placeholder=\"Confirm Password\" defaultValue={confirmPassword} /></div>\r\n                <div className=\"grid-100 pad-bottom\"><button className=\"button\" type=\"submit\">Sign Up</button><button className=\"button button-secondary\" onClick={this.handleClick}>Cancel</button></div>\r\n                </form>\r\n            </div>\r\n            <p>&nbsp;</p>\r\n            <p>Already have a user account? <Link to=\"/signin\">Click here</Link> to sign in!</p>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n\r\n    /**\r\n    * Sets and changes state when user updates input fields.\r\n    * @param {event} change - input fields. \r\n    */\r\n    change = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n    \r\n        this.setState(() => {\r\n          return {\r\n            [name]: value\r\n          };\r\n        });\r\n      }\r\n\r\n    /**\r\n    * Sends sign up request and checks for errors\r\n    */\r\n    submit = () => {\r\n        const { context } = this.props;\r\n        const { from } = this.props.location.state || { from: { pathname: '/authenticated'}};\r\n        const {\r\n            firstName,\r\n            lastName,\r\n            emailAddress,\r\n            password,\r\n            confirmPassword,\r\n        } = this.state;\r\n\r\n        const user = {\r\n            firstName,\r\n            lastName,\r\n            password,\r\n            emailAddress,\r\n        }\r\n\r\n        if (password===confirmPassword) {\r\n            context.data.createUser(user)\r\n            .then( errors => {\r\n                if (errors.length) {\r\n                    this.setState({errors});\r\n                } else {\r\n                    context.actions.signIn(emailAddress, password)\r\n                    .then(() => {\r\n                        this.props.history.push(from)\r\n                    });\r\n                }\r\n            })\r\n            .catch( err => {\r\n                this.props.history.push ('/error');\r\n            });\r\n        } else {\r\n            this.setState({\r\n                errors: [\"Passwords do not match\"]\r\n            })\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Redirect} from  'react-router-dom';\r\n\r\nexport default ({ context }) => {\r\n  console.log(context);\r\n  context.actions.signOut();\r\n    return (\r\n      <Redirect to=\"/\" />\r\n    );\r\n  }\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Courses extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      courses : [],\r\n      courseList: []\r\n    };\r\n    \r\n}\r\n\r\ncomponentDidMount(){\r\n\r\n    /**\r\n    * Fetches All Course Data and Renders the HTML\r\n    */\r\n    fetch(`http://localhost:5000/api/courses/`)\r\n    .then( response => response.json())\r\n    .then( responseData => {\r\n      for (let i = 0; i < responseData.length; i++) {\r\n        this.state.courses.push(responseData[i]);\r\n      }\r\n      return this.state.courses\r\n    })\r\n    .then( responseData => {\r\n      let list;\r\n      list = responseData.map( course => \r\n        <div className=\"grid-33\" key={course.id}><Link className=\"course--module course--link\" to={`/courses/${course.id}`} >\r\n        <h4 className=\"course--label\">Course</h4>\r\n        <h3 className=\"course--title\">{course.title}</h3>\r\n  </Link></div>\r\n      )\r\n      this.setState({ \r\n        courseList: list\r\n      });\r\n    });\r\n\r\n}\r\n  \r\n    render() {\r\n      return (\r\n        <div className=\"bounds\">\r\n          {this.state.courseList}\r\n          <div className=\"grid-33\"><Link className=\"course--module course--add--module\" to=\"courses/create\">\r\n            <h3 className=\"course--add--title\"><svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\r\n                viewBox=\"0 0 13 13\" className=\"add\">\r\n                <polygon points=\"7,6 7,0 6,0 6,6 0,6 0,7 6,7 6,13 7,13 7,7 13,7 13,6 \"></polygon>\r\n              </svg>New Course</h3>\r\n          </Link></div>\r\n        </div>\r\n\r\n      );\r\n    }\r\n  }\r\n\r\nexport default Courses;","import React from 'react';\r\n\r\nfunction NotFound(props) {\r\n    return(\r\n    <div className=\"bounds\">\r\n        <h1>Not Found</h1>\r\n        <p>Sorry! We couldn't find the page you're looking for.</p>\r\n    </div>\r\n    );\r\n  }\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { Consumer } from './Context';\r\n\r\nexport default ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Consumer>\r\n      { context => (\r\n        <Route\r\n          {...rest}\r\n          render={props => context.authenticatedUser  ? (\r\n              <Component {...props} />\r\n            )  : (\r\n              <Redirect to={{\r\n                pathname: '/signin', \r\n                state: { from: props.location},\r\n\r\n              }} />\r\n            )\r\n          }\r\n        />\r\n      )}\r\n    </Consumer>\r\n  );\r\n};","import React from 'react';\r\n\r\nfunction Forbidden() {\r\n    return(\r\n      <div className=\"bounds\">\r\n        <h1>Forbidden</h1>\r\n        <p>Oh oh! You can't access this page.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default Forbidden;","import React from 'react';\r\n\r\nfunction UnhandledError() {\r\n    return(\r\n      <div className=\"bounds\">\r\n        <h1>Error</h1>\r\n        <p>Sorry! We just encountered an unexpected error.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default UnhandledError;","/* Treehouse FSJS Techdegree\r\n * Project 10 - Full Stack App\r\n * By Justin Black\r\n */\r\n\r\nimport React, { PureComponent } from 'react';\r\nimport {\r\n  BrowserRouter,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom';\r\nimport './styles/global.css';\r\nimport Header from './components/Header.js';\r\nimport CreateCourse from './components/CreateCourse.js';\r\nimport UpdateCourse from './components/UpdateCourse.js';\r\nimport CourseDetail from './components/CourseDetail.js';\r\nimport UserSignIn from './components/UserSignIn.js';\r\nimport UserSignUp from './components/UserSignUp.js';\r\nimport UserSignOut from './components/UserSignOut.js';\r\nimport Courses from './components/Courses.js';\r\nimport NotFound from './components/NotFound.js';\r\nimport withContext from './Context';\r\nimport Authenticated from './components/Authenticated';\r\nimport PrivateRoute from './PrivateRoute.js';\r\nimport Forbidden from './components/Forbidden';\r\nimport UnhandledError from './components/UnhandledError';\r\n\r\nconst UserSignUpWithContext = withContext(UserSignUp);\r\nconst UserSignInWithContext = withContext(UserSignIn);\r\nconst CreateCourseWithContext = withContext(CreateCourse);\r\nconst UserSignOutWithContext = withContext(UserSignOut);\r\nconst HeaderWithContext = withContext(Header);\r\nconst AuthWithContext = withContext(Authenticated);\r\nconst UpdateCourseWithContext = withContext(UpdateCourse);\r\nconst CourseDetailInWithContext = withContext(CourseDetail);\r\n\r\n\r\n\r\nclass App extends PureComponent  {\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n      <div>\r\n        <HeaderWithContext />\r\n        <Switch>\r\n          <Route exact path='/' component={Courses} />\r\n          <PrivateRoute exact path='/courses/create' component={CreateCourseWithContext} />\r\n          <Route exact path='/courses/:id' component={CourseDetailInWithContext} /> \r\n          <Route exact path='/signin' component={UserSignInWithContext} /> \r\n          <Route exact path='/signup' component={UserSignUpWithContext} /> \r\n          <Route exact path='/signout' component={UserSignOutWithContext} /> \r\n          <Route exact path='/signout' component={UserSignOut} /> \r\n          <PrivateRoute exact path='/authenticated' component={AuthWithContext} />\r\n          <PrivateRoute exact path='/courses/:id/update' component={UpdateCourseWithContext} /> \r\n          <Route exact path='/forbidden' component={Forbidden} /> \r\n          <Route exact path='/error' component={UnhandledError} /> \r\n          <Route component= {NotFound} /> \r\n        </Switch>\r\n      </div> \r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// This component is rendered when user signs up to website. \r\nexport default ({context}, props) => {\r\n  const authUser = context.authenticatedUser;\r\n  const reroute = setTimeout(function(){window.location.replace('/');}, 5000);\r\n  return (\r\n  <div className=\"bounds\">\r\n    <div className=\"grid-100\" onLoad= {reroute}>\r\n      <h1>Congratulations {authUser.firstName}! Signup was successful!</h1>\r\n      <p>You should be redirected in 5 seconds. If not, <Link to='/'> click here</Link>.</p>\r\n    </div>\r\n  </div>\r\n  );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from './Context'\r\n// import './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}